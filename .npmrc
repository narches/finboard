# Use the official npm registry
registry=https://registry.npmjs.org/

# Authentication for private npm packages (replace 'your-auth-token' with the actual token)
# This is especially useful if your Next.js project uses private npm packages.
//registry.npmjs.org/:_authToken=your-auth-token

# Ensure consistent dependency versions by installing exact versions
save-exact=true

# Enable stricter package locking to reduce inconsistencies in dependencies
engine-strict=true

# Caching to speed up npm installs
cache=~/.npm/cache

# Set up a proxy if required (comment these out if not needed)
# http-proxy=http://your-proxy-url
# https-proxy=http://your-proxy-url

# Prevent publishing the .npmrc file itself to npm (important for security)
exclude-npmrc=true

# Automatically retry network requests in case of transient failures
fetch-retries=3
fetch-retry-mintimeout=10000
fetch-retry-maxtimeout=60000

# Set the default node version to match the one used in your Next.js project
node-version=16

# Maximize the number of concurrent requests for faster installs
maxsockets=50

# Prevent unnecessary update checks
update-notifier=false

# Log level for better debugging
loglevel=warn

# Use the local .npmrc in the current project directory over the global one
local-prefix=./

# Configure script pre-hooks for Next.js (optional)
# These hooks can run scripts before/after installation or building the project
# For example:
# preinstall=node scripts/preinstall.js
# postinstall=node scripts/postinstall.js

# Limit the scope of installed dependencies to prevent bloat
only=production

# Custom settings for private npm scopes (if applicable)
# @your-scope:registry=https://your-custom-registry-url/
# //your-custom-registry-url/:_authToken=your-private-scope-auth-token
